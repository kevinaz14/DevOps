- name: Create Azure VM
  hosts: localhost
  connection: local
  vars:
    resource_group: zuyrg00003
    vm_name: WMA
    location: westeu
    username: WMA_Admin
    password: P@ssw0rd2018
    winrm_enable_script: SQBuAHYAbwBrAGUALQBFAHgAcAByAGUAcwBzAGkAbwBuACAALQBDAG8AbQBtAGEAbgBkACAAKAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABTAHkAcwB0AGUAbQAuAE4AZQB0AC4AVwBlAGIAQwBsAGkAZQBuAHQAKQAuAEQAbwB3AG4AbABvAGEAZABTAHQAcgBpAG4AZwAoACcAaAB0AHQAcABzADoALwAvAHIAYQB3AC4AZwBpAHQAaAB1AGIAdQBzAGUAcgBjAG8AbgB0AGUAbgB0AC4AYwBvAG0ALwBhAG4AcwBpAGIAbABlAC8AYQBuAHMAaQBiAGwAZQAvAGQAZQB2AGUAbAAvAGUAeABhAG0AcABsAGUAcwAvAHMAYwByAGkAcAB0AHMALwBDAG8AbgBmAGkAZwB1AHIAZQBSAGUAbQBvAHQAaQBuAGcARgBvAHIAQQBuAHMAaQBiAGwAZQAuAHAAcwAxACcAKQApADsAIABFAG4AYQBiAGwAZQAtAFcAUwBNAGEAbgBDAHIAZQBkAFMAUwBQACAALQBSAG8AbABlACAAUwBlAHIAdgBlAHIAIAAtAEYAbwByAGMAZQA=
  
  tasks:
  - name: Create an availability set
    azure_rm_availabilityset:
      name: WMAavailabilityset
      resource_group: "{{ resource_group }}"
      
  - name: Create public IP address
    azure_rm_publicipaddress:
      resource_group: "{{ resource_group }}"
      allocation_method: Static
      name: "{{ vm_name }}_publicIP"
      domain_name: wma
      
  - name: create load balancer
    azure_rm_loadbalancer:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_LoadBalancer"
      frontend_ip_configurations:
        - name: frontendIPconf
          public_ip_address: "{{ vm_name }}_publicIP"
      backend_address_pools:
        - name: backendaddrpoolWEB
        - name: backendaddrpoolMGT
      probes:
        - name: probHTTP
          protocol: Tcp
          port: 80
          fail_count: 3
          interval: 15
        - name: probHTTPS
          protocol: Tcp
          port: 443
          fail_count: 3
          interval: 15
        - name: probRDP
          protocol: Tcp
          port: 3389
          fail_count: 3
          interval: 15
      load_balancing_rules:
        - name: loadbalancingrulesHTTP
          frontend_ip_configuration: frontendIPconf
          protocol: Tcp
          frontend_port: 80
          backend_port: 80
          backend_address_pool: backendaddrpoolWEB
          probe: probHTTP
        - name: loadbalancingrulesHTTPS
          frontend_ip_configuration: frontendIPconf
          protocol: Tcp
          frontend_port: 443
          backend_port: 443
          backend_address_pool: backendaddrpoolWEB
          probe: probHTTPS
        - name: loadbalancingrulesRDP
          frontend_ip_configuration: frontendIPconf
          protocol: Tcp
          frontend_port: 3389
          backend_port: 3389
          backend_address_pool: backendaddrpoolMGT
          probe: probRDP
    
  - name: Create storage account WEB01
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: wmastorageaccountweb01
      account_type: Standard_LRS
      
  - name: Create storage account WEB02
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: wmastorageaccountweb02
      account_type: Standard_LRS
      
  - name: Create storage account WMAManagement
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: wmastorageaccountmngnt
      account_type: Standard_LRS
      
  - name: Create storage account WMADC01
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: wmastorageaccountdc01
      account_type: Standard_LRS
      
  - name: Create storage account WMADB01
    azure_rm_storageaccount:
      resource_group: "{{ resource_group }}"
      name: wmastorageaccountdb01
      account_type: Standard_LRS
      
  - name: Create virtual network Frontend
    azure_rm_virtualnetwork:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_vnFrontend"
      address_prefixes: "10.0.1.0/24"
      
  - name: Create virtual network Backend
    azure_rm_virtualnetwork:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_vnBackend"
      address_prefixes: "10.0.2.0/24"
      
  - name: Add subnet Frontend
    azure_rm_subnet:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_subnetFrontend"
      address_prefix: "10.0.1.0/24"
      virtual_network: "{{ vm_name }}_vnFrontend"
      
  - name: Add subnet Backend
    azure_rm_subnet:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_subnetBackend"
      address_prefix: "10.0.2.0/24"
      virtual_network: "{{ vm_name }}_vnBackend"
      
  - name: Create Network Security Group Frontend
    azure_rm_securitygroup:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_nsgFrontend"
      rules:
        - name: HTTPandHTTPS
          protocol: Tcp
          destination_address_prefix:
            - '10.0.1.4'
            - '10.0.1.5'
          destination_port_range:
            - 80
            - 443
          access: Allow
          priority: 102
          direction: Inbound
        - name: RDPinbound
          protocol: Tcp
          destination_address_prefix:
            - '10.0.1.6'
          destination_port_range: 3389
          access: Allow
          priority: 1001
          direction: Inbound
        - name: AnsibleConnection
          protocol: Tcp
          destination_address_prefix:
            - '10.0.1.4'
            - '10.0.1.5'
            - '10.0.1.6'
          destination_port_range:
            - 80
            - 443
            - 5985
            - 5986
          access: Allow
          priority: 1003
          direction: Inbound
        
  - name: Create Network Security Group Backend
    azure_rm_securitygroup:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_nsgBackend"
      rules:
        - name: RDP
          protocol: Tcp
          source_address_prefix:
            - '10.0.1.6'
          destination_address_prefix:
            - '10.0.2.4'
            - '10.0.2.5'
          destination_port_range: 3389
          access: Allow
          priority: 1000
          direction: Inbound
        - name: SSHinbound
          protocol: Tcp
          source_address_prefix:
            - '10.0.1.4'
            - '10.0.1.5'
          destination_address_prefix:
            - '10.0.2.4'
            - '10.0.2.5'
          destination_port_range: 22
          access: Allow
          priority: 1001
          direction: Inbound
        - name: SSHoutbound
          protocol: Tcp
          source_address_prefix:
            - '10.0.2.4'
            - '10.0.2.5'
          destination_address_prefix:
            - '10.0.1.4'
            - '10.0.1.5'
          destination_port_range: 22
          access: Allow
          priority: 1002
          direction: Outbound
     
  - name: Create virtual network interface card WEB01
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_NICweb01"
      virtual_network: "{{ vm_name }}_vnFrontend"
      subnet: "{{ vm_name }}_subnetFrontend"
      security_group: "{{ vm_name }}_nsgFrontend"
      ip_configurations:
        - name: ipconfig1
          load_balancer_backend_address_pools:
            - name: backendaddrpoolWEB
              load_balancer: "{{ vm_name }}_LoadBalancer"
      
  - name: Create VM WEB01
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}WEB01"
      vm_size: Standard_B2s
      storage_account: wmastorageaccountweb01
      os_type: Windows
      admin_username: "{{ username }}"
      admin_password: "{{ password }}"
      availability_set: WMAavailabilityset
      network_interfaces: "{{ vm_name }}_NICweb01"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: 2016-Datacenter
        version: latest
        
  - name: create Azure vm extension to enable HTTPS WinRM listener
    azure_rm_virtualmachine_extension:
      name: winrm-extension
      resource_group: "{{ resource_group }}"
      virtual_machine_name: "{{ vm_name }}WEB01"
      publisher: Microsoft.Compute
      virtual_machine_extension_type: CustomScriptExtension
      type_handler_version: 1.9
      settings: '{"commandToExecute": "powershell.exe -ExecutionPolicy ByPass -EncodedCommand {{winrm_enable_script}}"}'
      auto_upgrade_minor_version: true
        
  - name: Create virtual network interface card WEB02
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_NICweb02"
      virtual_network: "{{ vm_name }}_vnFrontend"
      subnet: "{{ vm_name }}_subnetFrontend"
      security_group: "{{ vm_name }}_nsgFrontend"
      ip_configurations:
        - name: ipconfig1
          load_balancer_backend_address_pools:
            - name: backendaddrpoolWEB
              load_balancer: "{{ vm_name }}_LoadBalancer"
      
  - name: Create VM WEB02
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}WEB02"
      vm_size: Standard_B2s
      storage_account: wmastorageaccountweb02
      os_type: Windows
      admin_username: "{{ username }}"
      admin_password: "{{ password }}"
      availability_set: WMAavailabilityset
      network_interfaces: "{{ vm_name }}_NICweb02"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: 2016-Datacenter
        version: latest
        
  - name: Create virtual network interface card WMAManagement
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_NICmanagement"
      virtual_network: "{{ vm_name }}_vnFrontend"
      subnet: "{{ vm_name }}_subnetFrontend"
      security_group: "{{ vm_name }}_nsgFrontend"
      ip_configurations:
      - name: ipconfig1
        load_balancer_backend_address_pools:
          - name: backendaddrpoolMGT
            load_balancer: "{{ vm_name }}_LoadBalancer"
      
  - name: Create VM WMAManagement
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}Management"
      vm_size: Standard_B2s
      storage_account: wmastorageaccountmngnt
      os_type: Windows
      admin_username: "{{ username }}"
      admin_password: "{{ password }}"
      availability_set: WMAavailabilityset
      network_interfaces: "{{ vm_name }}_NICmanagement"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: 2016-Datacenter
        version: latest
        
  - name: Create virtual network interface card WMADC01
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_NICDC01"
      virtual_network: "{{ vm_name }}_vnBackend"
      subnet: "{{ vm_name }}_subnetBackend"
      security_group: "{{ vm_name }}_nsgBackend"
      
  - name: Create VM WMADC01
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}DC01"
      vm_size: Standard_B2s
      storage_account: wmastorageaccountdc01
      os_type: Windows
      admin_username: "{{ username }}"
      admin_password: "{{ password }}"
      network_interfaces: "{{ vm_name }}_NICDC01"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: 2016-Datacenter
        version: latest
        
  - name: Create virtual network interface card WMADB01
    azure_rm_networkinterface:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}_NICDB01"
      virtual_network: "{{ vm_name }}_vnBackend"
      subnet: "{{ vm_name }}_subnetBackend"
      security_group: "{{ vm_name }}_nsgBackend"
      
  - name: Create VM WMADB01
    azure_rm_virtualmachine:
      resource_group: "{{ resource_group }}"
      name: "{{ vm_name }}DB01"
      vm_size: Standard_B2s
      storage_account: wmastorageaccountdb01
      os_type: Windows
      admin_username: "{{ username }}"
      admin_password: "{{ password }}"
      network_interfaces: "{{ vm_name }}_NICDB01"
      image:
        offer: WindowsServer
        publisher: MicrosoftWindowsServer
        sku: 2016-Datacenter
        version: latest      

  - name: Create virtual network peering Frontend
    azure_rm_virtualnetworkpeering:
      resource_group: "{{ resource_group }}"
      name: vnetpeerFrontend
      virtual_network: "{{ vm_name }}_vnFrontend"
      remote_virtual_network:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}_vnBackend"
      allow_virtual_network_access: true
      allow_forwarded_traffic: false
      
  - name: Create virtual network peering Frontend
    azure_rm_virtualnetworkpeering:
      resource_group: "{{ resource_group }}"
      name: vnetpeerBackend
      virtual_network: "{{ vm_name }}_vnBackend"
      remote_virtual_network:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}_vnFrontend"
      allow_virtual_network_access: true
      allow_forwarded_traffic: false
      
  ignore_errors: yes     
